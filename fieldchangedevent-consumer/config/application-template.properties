#properties related to unit testing and running at the command line go here
logging.level.root=INFO
logging.level.org.springframework=INFO
spring.profiles.active=local

#if you are behind a corporate proxy/firewall and want to access Predix Cloud
#predix.rest.proxyHost =put.your.proxyHost.here 
#predix.rest.proxyPort=put.your.proxyPort.here
#predix.rest.proxyUser=put.your.proxyUser.here.if.needed
#predix.rest.proxyPassword=put.your.proxyPassword.here.if.needed

#used by integration test
#please see fieldchangedevent-consumer src/main/java/com/ge/predix/solsvc/dispatcherq/config/OrchestrationRestConfig.java for more info on Predix Analytic Runtime orchestration properties
predix.orchestration.restProtocol=https
predix.orchestration.restHost=put.your.analytics.runtime.host.here
predix.orchestration.restPort=443
predix.orchestration.restBaseResource=api/v1/execution
predix.orchestration.zoneId=put.your.analytics.runtime.zoneId.here

#please see fieldchangedevent-consumer src/main/java/com/ge/predix/solsvc/dispatcherq/config/OrchestrationRestConfig.java for more info on RMD Analytic properties
predix.analytic.restProtocol=https
predix.analytic.restHost=put.your.refappanalyticCF.host.here
predix.analytic.restPort=443
predix.analytic.restBaseResource=api/v1/ref_app_analytic/execution

#please see fieldchangedevent-consumer src/main/resources/META-INF/spring/solution-change-event-consumer.xml for more info on RMD Analytic properties
fieldChangedEvent.MainQueue=${mainq:FieldChangedEventMainQueue}
fieldChangedEvent.ErrorQueue=${errorq:FieldChangedEventErrorQueue}

#please see fieldchangedevent-consumer src/main/resources/META-INF/spring/solution-change-event-consumer.xml for more info on RMD Analytic properties
rabbitmq.server=${server:localhost}
rabbitmq.port=${port:5672}

#please see predix-rest-client src/main/java/com/ge/predix/solsvc/restclient/config/OauthRestConfig.java for more info on oauth properties
# e.g. predix.oauth.issuerId.url=https://36492c1e-657c-4377-ac51-add963552460.predix-uaa.cloud.com/oauth/token
predix.oauth.issuerId.url=put.your.uaa.issuerId.here
#you may put client:secret as unencoded cleartext by setting predix.oauth.clientIdEncode=true
predix.oauth.clientIdEncode=false
predix.oauth.clientId=you.should.base64encode(put.your.clientId:put.your.clientSecret separated by a colon)  
